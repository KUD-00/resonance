// source: services.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.api.BuyGood', null, global);
goog.exportSymbol('proto.api.GetBuyGoodsRequest', null, global);
goog.exportSymbol('proto.api.GetBuyGoodsResponse', null, global);
goog.exportSymbol('proto.api.GetSellGoodsRequest', null, global);
goog.exportSymbol('proto.api.GetSellGoodsResponse', null, global);
goog.exportSymbol('proto.api.GetStationsRequest', null, global);
goog.exportSymbol('proto.api.GetStationsResponse', null, global);
goog.exportSymbol('proto.api.Good', null, global);
goog.exportSymbol('proto.api.PriceHistory', null, global);
goog.exportSymbol('proto.api.Producer', null, global);
goog.exportSymbol('proto.api.SellGood', null, global);
goog.exportSymbol('proto.api.Station', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PriceHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PriceHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PriceHistory.displayName = 'proto.api.PriceHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Producer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Producer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Producer.displayName = 'proto.api.Producer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Good = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Good.repeatedFields_, null);
};
goog.inherits(proto.api.Good, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Good.displayName = 'proto.api.Good';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.BuyGood = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.BuyGood.repeatedFields_, null);
};
goog.inherits(proto.api.BuyGood, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.BuyGood.displayName = 'proto.api.BuyGood';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SellGood = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.SellGood.repeatedFields_, null);
};
goog.inherits(proto.api.SellGood, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.SellGood.displayName = 'proto.api.SellGood';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Station = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Station.repeatedFields_, null);
};
goog.inherits(proto.api.Station, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Station.displayName = 'proto.api.Station';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetSellGoodsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetSellGoodsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetSellGoodsRequest.displayName = 'proto.api.GetSellGoodsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetSellGoodsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetSellGoodsResponse.repeatedFields_, null);
};
goog.inherits(proto.api.GetSellGoodsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetSellGoodsResponse.displayName = 'proto.api.GetSellGoodsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetBuyGoodsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetBuyGoodsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetBuyGoodsRequest.displayName = 'proto.api.GetBuyGoodsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetBuyGoodsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetBuyGoodsResponse.repeatedFields_, null);
};
goog.inherits(proto.api.GetBuyGoodsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetBuyGoodsResponse.displayName = 'proto.api.GetBuyGoodsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetStationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetStationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetStationsRequest.displayName = 'proto.api.GetStationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetStationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetStationsResponse.repeatedFields_, null);
};
goog.inherits(proto.api.GetStationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetStationsResponse.displayName = 'proto.api.GetStationsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PriceHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PriceHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PriceHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PriceHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: jspb.Message.getFieldWithDefault(msg, 1, 0),
    time: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PriceHistory}
 */
proto.api.PriceHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PriceHistory;
  return proto.api.PriceHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PriceHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PriceHistory}
 */
proto.api.PriceHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PriceHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PriceHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PriceHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PriceHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 price = 1;
 * @return {number}
 */
proto.api.PriceHistory.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.PriceHistory} returns this
 */
proto.api.PriceHistory.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 time = 2;
 * @return {number}
 */
proto.api.PriceHistory.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.PriceHistory} returns this
 */
proto.api.PriceHistory.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Producer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Producer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Producer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Producer.toObject = function(includeInstance, msg) {
  var f, obj = {
    producerMap: (f = msg.getProducerMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Producer}
 */
proto.api.Producer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Producer;
  return proto.api.Producer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Producer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Producer}
 */
proto.api.Producer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getProducerMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Producer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Producer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Producer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Producer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProducerMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * map<string, int64> producer = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.api.Producer.prototype.getProducerMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.Producer} returns this
 */
proto.api.Producer.prototype.clearProducerMap = function() {
  this.getProducerMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Good.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Good.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Good.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Good} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Good.toObject = function(includeInstance, msg) {
  var f, obj = {
    gooduniqueid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isspeciality: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    quotationvariation: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    fastquotationvariation: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    producerlistList: jspb.Message.toObjectList(msg.getProducerlistList(),
    proto.api.Producer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Good}
 */
proto.api.Good.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Good;
  return proto.api.Good.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Good} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Good}
 */
proto.api.Good.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGooduniqueid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsspeciality(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuotationvariation(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFastquotationvariation(value);
      break;
    case 7:
      var value = new proto.api.Producer;
      reader.readMessage(value,proto.api.Producer.deserializeBinaryFromReader);
      msg.addProducerlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Good.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Good.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Good} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Good.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGooduniqueid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsspeciality();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQuotationvariation();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getFastquotationvariation();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getProducerlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.api.Producer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string GoodUniqueId = 1;
 * @return {string}
 */
proto.api.Good.prototype.getGooduniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Good} returns this
 */
proto.api.Good.prototype.setGooduniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.api.Good.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Good} returns this
 */
proto.api.Good.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Description = 3;
 * @return {string}
 */
proto.api.Good.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Good} returns this
 */
proto.api.Good.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool IsSpeciality = 4;
 * @return {boolean}
 */
proto.api.Good.prototype.getIsspeciality = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.Good} returns this
 */
proto.api.Good.prototype.setIsspeciality = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional double QuotationVariation = 5;
 * @return {number}
 */
proto.api.Good.prototype.getQuotationvariation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.Good} returns this
 */
proto.api.Good.prototype.setQuotationvariation = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double FastQuotationVariation = 6;
 * @return {number}
 */
proto.api.Good.prototype.getFastquotationvariation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.Good} returns this
 */
proto.api.Good.prototype.setFastquotationvariation = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * repeated Producer ProducerList = 7;
 * @return {!Array<!proto.api.Producer>}
 */
proto.api.Good.prototype.getProducerlistList = function() {
  return /** @type{!Array<!proto.api.Producer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Producer, 7));
};


/**
 * @param {!Array<!proto.api.Producer>} value
 * @return {!proto.api.Good} returns this
*/
proto.api.Good.prototype.setProducerlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.api.Producer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Producer}
 */
proto.api.Good.prototype.addProducerlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.api.Producer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.Good} returns this
 */
proto.api.Good.prototype.clearProducerlistList = function() {
  return this.setProducerlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.BuyGood.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.BuyGood.prototype.toObject = function(opt_includeInstance) {
  return proto.api.BuyGood.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.BuyGood} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BuyGood.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stationid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    basebuyprice: jspb.Message.getFieldWithDefault(msg, 4, 0),
    buyprice: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buypricehistoryList: jspb.Message.toObjectList(msg.getBuypricehistoryList(),
    proto.api.PriceHistory.toObject, includeInstance),
    quotationvariation: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    fastquotationvariation: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    minquotation: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    maxquotation: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    gooduniqueid: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.BuyGood}
 */
proto.api.BuyGood.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.BuyGood;
  return proto.api.BuyGood.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.BuyGood} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.BuyGood}
 */
proto.api.BuyGood.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoodid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBasebuyprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuyprice(value);
      break;
    case 6:
      var value = new proto.api.PriceHistory;
      reader.readMessage(value,proto.api.PriceHistory.deserializeBinaryFromReader);
      msg.addBuypricehistory(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuotationvariation(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFastquotationvariation(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinquotation(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxquotation(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGooduniqueid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.BuyGood.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.BuyGood.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.BuyGood} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BuyGood.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStationid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBasebuyprice();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getBuyprice();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getBuypricehistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.api.PriceHistory.serializeBinaryToWriter
    );
  }
  f = message.getQuotationvariation();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getFastquotationvariation();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getMinquotation();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getMaxquotation();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getGooduniqueid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string GoodId = 1;
 * @return {string}
 */
proto.api.BuyGood.prototype.getGoodid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setGoodid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.api.BuyGood.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string StationId = 3;
 * @return {string}
 */
proto.api.BuyGood.prototype.getStationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setStationid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 BaseBuyPrice = 4;
 * @return {number}
 */
proto.api.BuyGood.prototype.getBasebuyprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setBasebuyprice = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 BuyPrice = 5;
 * @return {number}
 */
proto.api.BuyGood.prototype.getBuyprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setBuyprice = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated PriceHistory BuyPriceHistory = 6;
 * @return {!Array<!proto.api.PriceHistory>}
 */
proto.api.BuyGood.prototype.getBuypricehistoryList = function() {
  return /** @type{!Array<!proto.api.PriceHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.PriceHistory, 6));
};


/**
 * @param {!Array<!proto.api.PriceHistory>} value
 * @return {!proto.api.BuyGood} returns this
*/
proto.api.BuyGood.prototype.setBuypricehistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.api.PriceHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.PriceHistory}
 */
proto.api.BuyGood.prototype.addBuypricehistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.api.PriceHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.clearBuypricehistoryList = function() {
  return this.setBuypricehistoryList([]);
};


/**
 * optional double QuotationVariation = 7;
 * @return {number}
 */
proto.api.BuyGood.prototype.getQuotationvariation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setQuotationvariation = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double FastQuotationVariation = 8;
 * @return {number}
 */
proto.api.BuyGood.prototype.getFastquotationvariation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setFastquotationvariation = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double MinQuotation = 9;
 * @return {number}
 */
proto.api.BuyGood.prototype.getMinquotation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setMinquotation = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double MaxQuotation = 10;
 * @return {number}
 */
proto.api.BuyGood.prototype.getMaxquotation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setMaxquotation = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string GoodUniqueId = 11;
 * @return {string}
 */
proto.api.BuyGood.prototype.getGooduniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.BuyGood} returns this
 */
proto.api.BuyGood.prototype.setGooduniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.SellGood.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SellGood.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SellGood.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SellGood} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SellGood.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stationid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    basesellprice: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sellprice: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sellpricehistoryList: jspb.Message.toObjectList(msg.getSellpricehistoryList(),
    proto.api.PriceHistory.toObject, includeInstance),
    quotationvariation: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    fastquotationvariation: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    minquotation: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    maxquotation: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    gooduniqueid: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SellGood}
 */
proto.api.SellGood.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SellGood;
  return proto.api.SellGood.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SellGood} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SellGood}
 */
proto.api.SellGood.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoodid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBasesellprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSellprice(value);
      break;
    case 6:
      var value = new proto.api.PriceHistory;
      reader.readMessage(value,proto.api.PriceHistory.deserializeBinaryFromReader);
      msg.addSellpricehistory(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuotationvariation(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFastquotationvariation(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinquotation(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxquotation(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGooduniqueid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SellGood.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SellGood.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SellGood} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SellGood.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStationid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBasesellprice();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSellprice();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSellpricehistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.api.PriceHistory.serializeBinaryToWriter
    );
  }
  f = message.getQuotationvariation();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getFastquotationvariation();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getMinquotation();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getMaxquotation();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getGooduniqueid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string GoodId = 1;
 * @return {string}
 */
proto.api.SellGood.prototype.getGoodid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setGoodid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.api.SellGood.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string StationId = 3;
 * @return {string}
 */
proto.api.SellGood.prototype.getStationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setStationid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 BaseSellPrice = 4;
 * @return {number}
 */
proto.api.SellGood.prototype.getBasesellprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setBasesellprice = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 SellPrice = 5;
 * @return {number}
 */
proto.api.SellGood.prototype.getSellprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setSellprice = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated PriceHistory SellPriceHistory = 6;
 * @return {!Array<!proto.api.PriceHistory>}
 */
proto.api.SellGood.prototype.getSellpricehistoryList = function() {
  return /** @type{!Array<!proto.api.PriceHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.PriceHistory, 6));
};


/**
 * @param {!Array<!proto.api.PriceHistory>} value
 * @return {!proto.api.SellGood} returns this
*/
proto.api.SellGood.prototype.setSellpricehistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.api.PriceHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.PriceHistory}
 */
proto.api.SellGood.prototype.addSellpricehistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.api.PriceHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.clearSellpricehistoryList = function() {
  return this.setSellpricehistoryList([]);
};


/**
 * optional double QuotationVariation = 7;
 * @return {number}
 */
proto.api.SellGood.prototype.getQuotationvariation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setQuotationvariation = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double FastQuotationVariation = 8;
 * @return {number}
 */
proto.api.SellGood.prototype.getFastquotationvariation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setFastquotationvariation = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double MinQuotation = 9;
 * @return {number}
 */
proto.api.SellGood.prototype.getMinquotation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setMinquotation = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double MaxQuotation = 10;
 * @return {number}
 */
proto.api.SellGood.prototype.getMaxquotation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setMaxquotation = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string GoodUniqueId = 11;
 * @return {string}
 */
proto.api.SellGood.prototype.getGooduniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.SellGood} returns this
 */
proto.api.SellGood.prototype.setGooduniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Station.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Station.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Station.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Station} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Station.toObject = function(includeInstance, msg) {
  var f, obj = {
    stationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attachedtocity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    selllistList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    acquisitionlistList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Station}
 */
proto.api.Station.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Station;
  return proto.api.Station.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Station} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Station}
 */
proto.api.Station.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttachedtocity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelllist(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addAcquisitionlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Station.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Station.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Station} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Station.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttachedtocity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSelllistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getAcquisitionlistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string StationId = 1;
 * @return {string}
 */
proto.api.Station.prototype.getStationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.setStationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.api.Station.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Description = 3;
 * @return {string}
 */
proto.api.Station.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string AttachedToCity = 4;
 * @return {string}
 */
proto.api.Station.prototype.getAttachedtocity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.setAttachedtocity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string SellList = 5;
 * @return {!Array<string>}
 */
proto.api.Station.prototype.getSelllistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.setSelllistList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.addSelllist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.clearSelllistList = function() {
  return this.setSelllistList([]);
};


/**
 * repeated string AcquisitionList = 6;
 * @return {!Array<string>}
 */
proto.api.Station.prototype.getAcquisitionlistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.setAcquisitionlistList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.addAcquisitionlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.Station} returns this
 */
proto.api.Station.prototype.clearAcquisitionlistList = function() {
  return this.setAcquisitionlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetSellGoodsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetSellGoodsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetSellGoodsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetSellGoodsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gooduniqueid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    goodsellid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetSellGoodsRequest}
 */
proto.api.GetSellGoodsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetSellGoodsRequest;
  return proto.api.GetSellGoodsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetSellGoodsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetSellGoodsRequest}
 */
proto.api.GetSellGoodsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGooduniqueid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoodsellid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetSellGoodsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetSellGoodsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetSellGoodsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetSellGoodsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGooduniqueid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGoodsellid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string stationId = 1;
 * @return {string}
 */
proto.api.GetSellGoodsRequest.prototype.getStationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetSellGoodsRequest} returns this
 */
proto.api.GetSellGoodsRequest.prototype.setStationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string goodUniqueId = 2;
 * @return {string}
 */
proto.api.GetSellGoodsRequest.prototype.getGooduniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetSellGoodsRequest} returns this
 */
proto.api.GetSellGoodsRequest.prototype.setGooduniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string goodSellId = 3;
 * @return {string}
 */
proto.api.GetSellGoodsRequest.prototype.getGoodsellid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetSellGoodsRequest} returns this
 */
proto.api.GetSellGoodsRequest.prototype.setGoodsellid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetSellGoodsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetSellGoodsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetSellGoodsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetSellGoodsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetSellGoodsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodsList: jspb.Message.toObjectList(msg.getGoodsList(),
    proto.api.SellGood.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetSellGoodsResponse}
 */
proto.api.GetSellGoodsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetSellGoodsResponse;
  return proto.api.GetSellGoodsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetSellGoodsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetSellGoodsResponse}
 */
proto.api.GetSellGoodsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.SellGood;
      reader.readMessage(value,proto.api.SellGood.deserializeBinaryFromReader);
      msg.addGoods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetSellGoodsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetSellGoodsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetSellGoodsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetSellGoodsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.SellGood.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SellGood goods = 1;
 * @return {!Array<!proto.api.SellGood>}
 */
proto.api.GetSellGoodsResponse.prototype.getGoodsList = function() {
  return /** @type{!Array<!proto.api.SellGood>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.SellGood, 1));
};


/**
 * @param {!Array<!proto.api.SellGood>} value
 * @return {!proto.api.GetSellGoodsResponse} returns this
*/
proto.api.GetSellGoodsResponse.prototype.setGoodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.SellGood=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.SellGood}
 */
proto.api.GetSellGoodsResponse.prototype.addGoods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.SellGood, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetSellGoodsResponse} returns this
 */
proto.api.GetSellGoodsResponse.prototype.clearGoodsList = function() {
  return this.setGoodsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetBuyGoodsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetBuyGoodsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetBuyGoodsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetBuyGoodsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gooduniqueid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    goodbuyid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetBuyGoodsRequest}
 */
proto.api.GetBuyGoodsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetBuyGoodsRequest;
  return proto.api.GetBuyGoodsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetBuyGoodsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetBuyGoodsRequest}
 */
proto.api.GetBuyGoodsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGooduniqueid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoodbuyid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetBuyGoodsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetBuyGoodsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetBuyGoodsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetBuyGoodsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGooduniqueid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGoodbuyid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string stationId = 1;
 * @return {string}
 */
proto.api.GetBuyGoodsRequest.prototype.getStationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetBuyGoodsRequest} returns this
 */
proto.api.GetBuyGoodsRequest.prototype.setStationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string goodUniqueId = 2;
 * @return {string}
 */
proto.api.GetBuyGoodsRequest.prototype.getGooduniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetBuyGoodsRequest} returns this
 */
proto.api.GetBuyGoodsRequest.prototype.setGooduniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string goodBuyId = 3;
 * @return {string}
 */
proto.api.GetBuyGoodsRequest.prototype.getGoodbuyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetBuyGoodsRequest} returns this
 */
proto.api.GetBuyGoodsRequest.prototype.setGoodbuyid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetBuyGoodsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetBuyGoodsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetBuyGoodsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetBuyGoodsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetBuyGoodsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodsList: jspb.Message.toObjectList(msg.getGoodsList(),
    proto.api.BuyGood.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetBuyGoodsResponse}
 */
proto.api.GetBuyGoodsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetBuyGoodsResponse;
  return proto.api.GetBuyGoodsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetBuyGoodsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetBuyGoodsResponse}
 */
proto.api.GetBuyGoodsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.BuyGood;
      reader.readMessage(value,proto.api.BuyGood.deserializeBinaryFromReader);
      msg.addGoods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetBuyGoodsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetBuyGoodsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetBuyGoodsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetBuyGoodsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.BuyGood.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BuyGood goods = 1;
 * @return {!Array<!proto.api.BuyGood>}
 */
proto.api.GetBuyGoodsResponse.prototype.getGoodsList = function() {
  return /** @type{!Array<!proto.api.BuyGood>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.BuyGood, 1));
};


/**
 * @param {!Array<!proto.api.BuyGood>} value
 * @return {!proto.api.GetBuyGoodsResponse} returns this
*/
proto.api.GetBuyGoodsResponse.prototype.setGoodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.BuyGood=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.BuyGood}
 */
proto.api.GetBuyGoodsResponse.prototype.addGoods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.BuyGood, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetBuyGoodsResponse} returns this
 */
proto.api.GetBuyGoodsResponse.prototype.clearGoodsList = function() {
  return this.setGoodsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetStationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetStationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetStationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetStationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stationid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetStationsRequest}
 */
proto.api.GetStationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetStationsRequest;
  return proto.api.GetStationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetStationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetStationsRequest}
 */
proto.api.GetStationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStationid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetStationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetStationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetStationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetStationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string stationId = 1;
 * @return {string}
 */
proto.api.GetStationsRequest.prototype.getStationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetStationsRequest} returns this
 */
proto.api.GetStationsRequest.prototype.setStationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetStationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetStationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetStationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetStationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetStationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stationsList: jspb.Message.toObjectList(msg.getStationsList(),
    proto.api.Station.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetStationsResponse}
 */
proto.api.GetStationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetStationsResponse;
  return proto.api.GetStationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetStationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetStationsResponse}
 */
proto.api.GetStationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Station;
      reader.readMessage(value,proto.api.Station.deserializeBinaryFromReader);
      msg.addStations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetStationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetStationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetStationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetStationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.Station.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Station stations = 1;
 * @return {!Array<!proto.api.Station>}
 */
proto.api.GetStationsResponse.prototype.getStationsList = function() {
  return /** @type{!Array<!proto.api.Station>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Station, 1));
};


/**
 * @param {!Array<!proto.api.Station>} value
 * @return {!proto.api.GetStationsResponse} returns this
*/
proto.api.GetStationsResponse.prototype.setStationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Station=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Station}
 */
proto.api.GetStationsResponse.prototype.addStations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Station, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetStationsResponse} returns this
 */
proto.api.GetStationsResponse.prototype.clearStationsList = function() {
  return this.setStationsList([]);
};


goog.object.extend(exports, proto.api);
